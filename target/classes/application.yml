server:
  port: 8281

# SERVICE_REGISTRY ----------------------------------------------------------------------------------------------------
eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}@${random.int}
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: ${SERVICE_REGISTRY_URL:http://localhost:8761/eureka}

spring:
  application:
    name: order-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/order-service?useSSL=false&useUnicode=true&characterEncoding=UTF-8}
    username: postgres
    password: myPassword
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true

# SpringBoot actuator
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: 'true'
    ratelimiters:
      enabled: 'true'
  endpoint:
    health:
      show-details: always

# RESILIENCE4J
resilience4j:
  circuitbreaker:
    instances:
      CircuitBreakerService:
        sliding-window-size: '10'
        minimum-number-of-calls: '5'
        permitted-number-of-calls-in-half-open-state: '3'
        failure-rate-threshold: '50'
        wait-duration-in-open-state: 5s
        sliding-window-type: count_based
        automatic-transition-from-open-to-half-open-enabled: 'true'

# KAFKA
kafka:
  servers-config: ${KAFKA_SEVERS_CONFIG:localhost:29092,localhost:39093}
  notification-group: notification
  notification-topic: notification
  email-group: email
  email-topic: email

url:
  check-quantity-inventory-url: ${CHECK-QUANTITY-INVENTORY-URL:http://0.0.0.0:8284/api/inventory/check-quantity}

